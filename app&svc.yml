
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apples-app
  name: apples-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apples-app
  template:
    metadata:
      labels:
        app: apples-app
    spec:
      containers:
      - name: apples-app
        env:
          - name: MONGODB_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongodb-credentials
                key: MONGODB_USERNAME
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-credentials
                key: MONGODB_PASSWORD
        image: node:latest
        ports:
        - containerPort: 30200
        command: [ "/bin/bash", "-c", "cd /home/node && npm install mongodb && while true; do sleep 1800; done" ]
        #args: [ "db.vars.findOne( { name:'apples' } ).qty" ]
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: apples-app
  name: apples-app-service
spec:
  selector:
      app: apples-app
  ports:
  - port: 80
    protocol: TCP
    targetPort: 30200
    nodePort: 30200
  type: LoadBalancer


#---
#
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: apples-app-ingress
#spec:
#  rules:
#  - http:
#      paths:
#      - path: /
#        pathType: Prefix
#        backend:
#          service:
#            name: apples-app-service
#            port:
#              number: 80